@model List<SoberModel.User_ReviewRatings>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Approve User-Reviews";
    Layout = "~/Views/Shared/_Master.cshtml";
    WebGrid userReviewGrid = new WebGrid(Model, rowsPerPage: 15);
}

<div id="approveReviewdiv" class="content white-bg">
    <div class="container">
        <h2 class="panel box blue-bg">User Reviews</h2>
        @using (Ajax.BeginForm("viewreviewsforapproval", "userreview", new AjaxOptions()))
        {
            <div class="row">
                <div class="col-md-2">
                    <label>Facility Name:</label>
                </div>
                <div class="col-md-4">
                    @Html.TextBox("facilityname", ViewBag.CurrentFilter as string, new { @class = "form-control" })
                </div>
            </div>

            <div class="row">
                <div class="col-md-2">
                    <label>From Date:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBox("fromdate", ViewBag.FromDate as string, new { @class = "form-control datepicker", id = "fromdate" })
                </div>
                <div class="col-md-1">
                    <span>eg. - mm/dd/yyyy</span>
                </div>             
                <div class="col-md-2">
                    <label>To Date:</label>
                </div>
                <div class="col-md-3">
                    @Html.TextBox("todate", ViewBag.ToDate as string, new { @class = "form-control datepicker", id = "todate" })
                </div>
                <div class="col-md-1">
                    <span>eg. - mm/dd/yyyy</span>
                </div>
            </div>

            <div class="row aic">
                <div class="col-md-2">
                    <label>Status:</label>
                </div>
                <div class="col-md-2">
                    <div class="radio">
                        <label>
                            @Html.RadioButton("status", "all")
                            <label>All</label>
                        </label>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="radio">
                        <label>
                            @Html.RadioButton("status", "pending", true)
                            <label>Pending</label>
                        </label>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="radio">
                        <label>
                            @Html.RadioButton("status", "approved")
                            <label>Approved</label>
                        </label>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-2">
                    <button id="searchreviews" value="Search" type="submit" class="btn btn-primary">Search</button>
                </div>
            </div>
        }

        <div id="gridContent" class="table-responsive">
            @userReviewGrid.GetHtml(columns: new[]{
        userReviewGrid.Column("","",format: (item) => Html.ActionLink("Edit", "edituserreview","UserReview", new { reviewId = item.ReviewId }, new { target = "_blank" })),
        userReviewGrid.Column("PageName","Page Name"),
        userReviewGrid.Column("Title","Review Title",format:
        @<text>
            <div class="more">
                @item.Title
            </div>
        </text>),
        userReviewGrid.Column("RequestIPAddress","IP Address"),
        userReviewGrid.Column("Summary","Review Summary",format:
        @<text>
            <div class="more">
                @item.Summary
            </div>
        </text>),
        userReviewGrid.Column(header:"Avg Rating", format:
        @<text>
            @(Math.Round((double)(item.Rating_Overall + item.Rating_Treatment + item.Rating_Accomodation + item.Rating_Staff + item.Rating_Value + item.Rating_Food) / 6, 1).ToString("0.0"))
        </text>),
        userReviewGrid.Column("CreatedBy","User-Name"),
        userReviewGrid.Column("CreatedOn","CreatedOn", format:(item)=> string.Format("{0:MM/dd/yyyy}", item.CreatedOn )),
        userReviewGrid.Column(format:(item)=>
            {
                if (!item.Status)
                {
                    return Html.Raw(Ajax.ActionLink("Approve", "approveuserreview", new { reviewId = item.ReviewId }, new AjaxOptions { UpdateTargetId = "approveReviewdiv" }));
                }
                else return string.Empty;
            })
        }, htmlAttributes: new { @class = "table table-bordered table-listing" })
        </div>
    </div>
</div>