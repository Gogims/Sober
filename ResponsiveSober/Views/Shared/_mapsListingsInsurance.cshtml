@model IEnumerable<SoberModel.FreeListing>

<div id="map-canvas" style="width: 100%; height: 400px">
</div>

@*For maps*@
<script type="text/javascript">    
    var mapCanvas = null;
    var geocoder = null;
    var marker = null;
    var map3 = null;
    var myPano = null;
    var markers = [];
    var bounds = null;
    
    @{
        string firstAddress = "";

        foreach (var item in Model)
        {
            firstAddress = item.location_street1 + "," + item.location_city + "," + item.location_state + ",usa";
            break;
        }
    }

    $(document).ready(function(){
        loadScript();
    });

    function map() {
        geocoder = new google.maps.Geocoder();
        bounds = new google.maps.LatLngBounds();
        var latlng = new google.maps.LatLng(38, -98);
        var mapOptions = {
            zoom: 4,
            center: latlng
        }
        
        mapCanvas = new google.maps.Map(document.getElementById("map-canvas"), mapOptions);

        @foreach (var FreeListings in Model)
        {
            string state = FreeListings.location_state;

            if (state.Length <= 2)
            {
                state = SoberBLL.Directory.BLL_Listings.GetStateNameFromAbbrevation(FreeListings.location_state).ToLower();
            }

            string profile = "";    
            
            if (FreeListings.isEnhanced && !FreeListings.IsProfileInactive)
            {
                profile = Url.Action("profile", "directory", new { rehab = FreeListings.PageName.ToLower().Trim(), city = FreeListings.location_city.ToLower().Trim(), state = state.ToLower().Trim(), facility_type = FreeListings.surveyTypeShort.ToLower().Trim() });
            }
            else
            {
                profile = Url.Action("samhsa", "directory", new { rehab = FreeListings.PageName.ToLower(), city = FreeListings.location_city.ToLower(), state = state });
            }
                
            string address = FreeListings.location_street1.Trim() + "," + FreeListings.location_city.Trim() + "," + FreeListings.location_state.Trim() + ",usa";

            if (FreeListings.Latitude.HasValue && FreeListings.Longitude.HasValue)
            {
                <text>
                    setMarker(@FreeListings.Longitude, @FreeListings.Latitude, '@FreeListings.name1', '@profile');
                </text>
            }
            else
            {
                <text>
                    getLatLong('@address', '@FreeListings.name1', '@profile', '@FreeListings.PageName');
                </text>
            }
        }
    }

    function getLatLong(address3, title, link, pagename) {
        var result = "";
        geocoder.geocode({ 'address': address3, 'region': 'usa' }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                result = results[0].geometry.location;
                var myLatlng = new google.maps.LatLng(result.lat(), result.lng());
                                
                bounds.extend(myLatlng);
                mapCanvas.fitBounds(bounds);

                var marker = new google.maps.Marker({
                    position: result,
                    map: mapCanvas,
                    title: title
                });

                var contentString = '<a href="' + link + '">' + title + '</a>';
                var infowindow = new google.maps.InfoWindow({
                    content: contentString
                });

                google.maps.event.addListener(marker, 'click', function () {
                    infowindow.open(mapCanvas, marker);
                });

                $.ajax({
                    url: '@Url.Action("SetLongitudeLatitude", "directory")',
                    type: "POST",
                    data: {pagename: pagename, longitude: result.lng(), latitude: result.lat()}
                });

            } else {
                result = "Unable to find address: " + status;
                console.log(result);
            }
        });
        return result;
    }

    function setMarker(longitude, latitude, title, link) {
        var myLatlng = new google.maps.LatLng(latitude, longitude);

        var marker = new google.maps.Marker({
            position: myLatlng,
            map: mapCanvas,
            title: title
        });

        var contentString = '<a href="' + link + '">' + title + '</a>';
        var infowindow = new google.maps.InfoWindow({
            content: contentString
        });

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.open(mapCanvas, marker);
        });
    }

    function loadScript() {        
        var script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = 'https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places&callback=map';
        document.body.appendChild(script);
    }

    window.onload = loadScript;
</script>