@model SoberBLL.AddListings.SoberLivingSurvey

<div>
    @Html.HiddenFor(x => x.ImagesFolder)
    @Html.HiddenFor(x => x.User_Id)
    @Html.HiddenFor(x => x.CreatedOn)
    @Html.HiddenFor(x => x.ModifiedOn)
    @Html.HiddenFor(x => x.SoberLivingCenterName)
        
    <div class="row">        
        <div class="col-md-12">
            <h4 class="blue-bg box panel">Basic Information</h4>
        </div>

        <div class="col-md-12 form-group aic">
            <label>Type of Facility</label>
            <div class="row">
                @foreach (var rdbtn in Model.rdList_FacilityType)
                {
                    <div class="col-md-3">
                        <div class="radio">
                            <label>
                                @Html.RadioButtonFor(model => model.FacilityType, rdbtn.Value)
                                <label>@rdbtn.Text</label>
                                @Html.HiddenFor(x => rdbtn.Value)
                                @Html.HiddenFor(x => rdbtn.Text)
                            </label>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="col-md-12 form-group aic">
            <label>Gender</label>

            <div class="row">
                @foreach (var rdbtn in Model.rdList_Gender)
                {
                    <div class="col-md-3">
                        <div class="radio">
                            <label>
                                @Html.RadioButtonFor(model => model.Gender, rdbtn.Value)
                                <label>@rdbtn.Text</label>
                                @Html.HiddenFor(x => rdbtn.Value)
                                @Html.HiddenFor(x => rdbtn.Text)
                            </label>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="col-md-12 form-group aic">
            <label>Organization type</label>

            <div class="row">
                @foreach (var rdbtn in Model.rdList_Organization_type)
                {
                    <div class="col-md-3">
                        <div class="radio">
                            <label>
                                @Html.RadioButtonFor(model => model.Organization_type, rdbtn.Value)
                                <label>@rdbtn.Text</label>
                                @Html.HiddenFor(x => rdbtn.Value)
                                @Html.HiddenFor(x => rdbtn.Text)
                            </label>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="col-md-6 form-group required">
            <label>Number of beds <span>*</span>:</label>
            <div class="row">
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.NoOFBeds, new { @class = "form-control numbersOnly" })
                </div>
            </div>
            <span class="err-msg">@Html.ValidationMessageFor(model => model.NoOFBeds)</span>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h4 class="blue-bg box panel">Lease Terms</h4>
        </div>

        <div class="col-md-6 form-group required">
            <label>Security deposit required (0 if none) <span>*</span>:</label>
            <div class="row">
                <div class="col-md-1">$</div>
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.Security_Deposit, new { @class = "form-control numbersOnly" })
                </div>
            </div>
            <span class="err-msg">@Html.ValidationMessageFor(model => model.Security_Deposit)</span>
        </div>
        <div class="col-md-6 form-group required">
            <label>Range of typically weekly fees (all costs)  <span>*</span>:</label>
            <div class="row">
                <div class="col-md-1">$</div>
                <div class="col-md-4">@Html.TextBoxFor(model => model.Range_WeeklyFees_From, new { @class = "form-control numbersOnly" })</div>
                <div class="col-md-2">to   $</div>
                <div class="col-md-4">@Html.TextBoxFor(model => model.Range_WeeklyFees_To, new { @class = "form-control numbersOnly" })</div>
            </div>

            <span class="err-msg">@Html.ValidationMessageFor(model => model.Range_WeeklyFees_To)</span>
        </div>
        <div class="col-md-6 form-group aic">
            <label>First month's rent required at move in? :</label>

            <div class="row">
                @foreach (var rdbtn in Model.rdList_rent_required_at_move_in)
                {
                    <div class="col-md-2">
                        <div class="radio">
                            <label>
                                @Html.RadioButtonFor(model => model.rent_required, rdbtn.Value)
                                <label>@rdbtn.Text</label>
                                @Html.HiddenFor(x => rdbtn.Value)
                                @Html.HiddenFor(x => rdbtn.Text)
                            </label>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-md-6 form-group required">
            <label>Minimum length of stay requirement in weeks  <span>*</span>:</label>
            <div class="row">
                <div class="col-md-4">
                    @Html.TextBoxFor(model => model.stay_requirement, new { @class = "form-control numbersOnly" })
                </div>
            </div>
            <span class="err-msg">@Html.ValidationMessageFor(model => model.stay_requirement)</span>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h4 class="blue-bg box panel">Employment</h4>
        </div>
        <div class="col-md-12 form-group aic">
            <label>Is employment required?</label>

            <div class="row">
                @for (int i = 0; i < Model.rdList_employment_required.Count; i++)
                {
                    <div class="col-md-3">
                        <div class="radio">
                            <label>
                                @Html.RadioButtonFor(x => x.employment_required, Model.rdList_employment_required[i].Value)
                                @Html.LabelFor(x => x.rdList_employment_required[i], Model.rdList_employment_required[i].Text)
                                @Html.HiddenFor(x => Model.rdList_employment_required[i].Value)
                                @Html.HiddenFor(x => Model.rdList_employment_required[i].Text)
                            </label>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-md-6 form-group aic">
            <label>Is high risk employment allowed (e.g., cab driving, working where drugs/alcohol are sold)? </label>

            <div class="row">
                @foreach (var rdbtn in Model.rdList_High_Risk_Employment)
                {
                    <div class="col-md-2">
                        <div class="radio">
                            <label>
                                @Html.RadioButtonFor(model => model.High_Risk_Emp, rdbtn.Value)
                                <label>@rdbtn.Text</label>
                                @Html.HiddenFor(x => rdbtn.Value)
                                @Html.HiddenFor(x => rdbtn.Text)
                            </label>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="col-md-6 form-group required aic">
            <label>Pets Allowed?<span>*</span></label>
            <div class="col-md-12">
                @foreach (var rdbtn in Model.rdList_pets_allowed)
                {
                    <div class="col-md-2">
                        <div class="radio">
                            <label>
                                @Html.RadioButtonFor(model => model._PetsAllowed, rdbtn.Value)
                                <label>@rdbtn.Text</label>
                                @Html.HiddenFor(x => rdbtn.Value)
                                @Html.HiddenFor(x => rdbtn.Text)
                            </label>
                        </div>
                    </div>
                }
            </div>
            <span class="err-msg">@Html.ValidationMessageFor(model => model._PetsAllowed)</span>
        </div>
        <div class="col-md-12 form-group required aic">
            <label>Services offered (Please check all that apply) <span>*</span>:</label>
            <div class="atleastonecheckbox row">
                @for (int i = 0; i < Model.List_chckBox_Services_offered.Count; i++)
                {
                    <div class="col-md-4">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(x => x.List_chckBox_Services_offered[i].IsSelected)
                                @Html.LabelFor(x => x.List_chckBox_Services_offered[i].IsSelected, Model.List_chckBox_Services_offered[i].Text)
                                @Html.HiddenFor(x => x.List_chckBox_Services_offered[i].Value)
                            </label>
                        </div>
                    </div>
                }
                <span class="err-msg">@Html.ValidationMessageFor(model => model.Services_offered)</span>
            </div>
        </div>
        <div class="col-md-12 form-group required aic">
            <label>Resident's requirements (General - Please check all that are required) <span>*</span>:</label>
            <div class="atleastonecheckbox row">
                @for (int i = 0; i < Model.List_chckBox_Resident_requirements.Count; i++)
                {
                    <div class="col-md-4">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(x => x.List_chckBox_Resident_requirements[i].IsSelected)
                                @Html.LabelFor(x => x.List_chckBox_Resident_requirements[i].IsSelected, Model.List_chckBox_Resident_requirements[i].Text)
                                @Html.HiddenFor(x => x.List_chckBox_Resident_requirements[i].Value)
                            </label>
                        </div>
                    </div>
                }
                <span class="err-msg">@Html.ValidationMessageFor(model => model.Resident_requirements)</span>
            </div>
        </div>
        <div class="col-md-12 form-group required aic">
            <label>Amenities provided (please check all that apply) <span>*</span>:</label>
            <div class="atleastonecheckbox row">
                @for (int i = 0; i < Model.List_chckBox_Amenities_provided.Count; i++)
                {
                    <div class="col-md-4">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBoxFor(x => x.List_chckBox_Amenities_provided[i].IsSelected)
                                @Html.LabelFor(x => x.List_chckBox_Amenities_provided[i].IsSelected, Model.List_chckBox_Amenities_provided[i].Text)
                                @Html.HiddenFor(x => x.List_chckBox_Amenities_provided[i].Value)
                            </label>
                        </div>
                    </div>
                }
                <span class="err-msg">@Html.ValidationMessageFor(model => model.Amenities_provided)</span>
            </div>
        </div>
        <div class="col-md-12 form-group required">
            <label>Name and Description of the neighborhood (limit 2,000 characters) <span>*</span>:</label>
            @Html.TextAreaFor(model => model.Disc_neighborhood, new { @class = "form-control", rows = 2 })
            <span class="err-msg">@Html.ValidationMessageFor(model => model.Disc_neighborhood)</span>
        </div>
        <div class="col-md-12 form-group required">
            <label>Local area attractions of interest (please only list top 5) <span>*</span>:</label>

            <div class="row">
                @for (int i = 0; i < Model.List_Txt_attractions_of_interest.Count(); i++)
                {
                    <div class="col-md-6">
                        @Html.TextBoxFor(x => x.List_Txt_attractions_of_interest[i], new { @class = "form-control" })
                    </div>
                }
            </div>
            <span class="err-msg">@Html.ValidationMessageFor(model => model.attractions_of_interest)</span>
        </div>
        <div class="col-md-12 form-group">
            <label>Any other information that you want to add about your Sober Living Residences. (If you already have a narrative on the sober.com website, you can skip this question.) Limit 2000 characters:</label>
            @Html.TextAreaFor(model => model.OtherInfo, new { @class = "form-control", rows = 2 })
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <h4 class="blue-bg box panel">Media/Misc. Information Requests </h4>
        </div>
        <div class="col-md-12">
            <p>
                To enhance the exposure of your listing and to assist addicts/alcoholics and their loved ones, please attach the following items so we can include them in your Enhanced Sober.com Profile.&nbsp;
                If you don't have these items readily available, you can always email them to us later at <a href="mailto:clients@sober.com">clients@sober.com</a>:
            </p>
        </div>

        <div class="col-md-12 form-group">
            <label>Uploaded Images</label>
            @{
                SoberModel.MediaFiles_Survey mediaFiles = new SoberModel.MediaFiles_Survey();
                mediaFiles.Category = "SoberLivingSurvey";
                mediaFiles.User_Id = @Model.User_Id;
            }
            <div class="row">
                @Html.Partial("listimagefiles", mediaFiles)
            </div>
        </div>
        <div class="col-md-12 form-group">
            <label>Uploaded Videos</label>
            <div class="row">
                @Html.Partial("listvideofiles", mediaFiles)
            </div>
        </div>
        <div class="col-md-12 form-group">
            <label>Uploaded Rules, Brouchers</label>
            @{

                mediaFiles.Category = "soberlivingsurvey";
                mediaFiles.User_Id = @Model.User_Id;
            }
            <div class="row">
                @Html.Partial("listpdffiles", mediaFiles)
            </div>
        </div>
        <div class="col-md-12 form-group">
            <label>Uploaded Logo</label>
            @{
                mediaFiles.Category = "SoberLivingSurvey";
                mediaFiles.User_Id = @Model.User_Id;
            }
            <div class="row">
                @Html.Partial("listlogos", mediaFiles)
            </div>
        </div>
        <div class="col-md-12 form-group">
            @{
                string videoSrc = Url.Action("addvideo", "filemanager", new { userID = Model.User_Id, category = "SoberLivingSurvey" });
            }
            <label>Youtube Video Url of your housing and/or TV commercials</label>

            <iframe src="@videoSrc" style="width: 100%; height: 140px;"></iframe>
        </div>
        <div class="col-md-12 form-group">
            @{
                string src = "http://dev.sober.com/home/ImagePDF?folder=" + Model.ImagesFolder + "_pictures";
            }
            <label>Pictures of your housing (limit of 15) and Brochures, applications, fee schedules, and rules (limit 5). Maximum size: <b>5MB</b></label>

            <span>(gif,jpg,png) and pdf</span>
            <iframe src="@src" style="width: 100%; height: 300px;"></iframe>
        </div>
        <div class="col-md-12 form-group">
            @{
                src = "http://dev.sober.com/home/logo?folder=" + Model.ImagesFolder + "_logo";
            }
            <label>Your logo</label>
            <span>(gif,jpg,png)</span>
            <iframe src="@src" style="width: 100%; height: 250px;"></iframe>
        </div>
    </div>
</div>