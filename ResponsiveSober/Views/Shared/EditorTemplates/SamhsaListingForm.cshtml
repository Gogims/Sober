@model SoberBLL.AddListings.SamhsaListingForm

@Html.HiddenFor(x => x.surveyCategory)
@Html.HiddenFor(x => x.ListingId)
@Html.HiddenFor(x => x.CreatedOn)
@Html.HiddenFor(x => x.StatusId)

<div class="row">
    <div class="col-md-6 required">
        <label>Organization Name <span>*</span>:</label>
        @Html.TextBoxFor(model => model.name1, new { @class = "form-control" })
        <span class="err-msg">@Html.ValidationMessageFor(model => model.name1)</span>
    </div>
    <div class="col-md-6">
        <label>DBA Name:</label>
        @Html.TextBoxFor(model => model.name2, new { @class = "form-control" })
    </div>
    <div class="col-md-6 required">
        <label>Street1 <span>*</span>:</label>
        @Html.TextBoxFor(model => model.location_street1, new { @class = "form-control" })
        <span class="err-msg">@Html.ValidationMessageFor(model => model.location_street1)</span>
    </div>
    <div class="col-md-6">
        <label>Street2 :</label>
        @Html.TextBoxFor(model => model.location_street2, new { @class = "form-control" })
    </div>
    <div class="col-md-6 required">
        <label>City <span>*</span>:</label>
        @Html.TextBoxFor(model => model.location_city, new { @class = "form-control" })
        <span class="err-msg">@Html.ValidationMessageFor(model => model.location_city)</span>
    </div>
    <div class="col-md-6 required">
        <label>State <span>*</span>:</label>
        @Html.DropDownListFor(model => model.location_state, new SelectList(ViewBag.States, "StateAbbreviation", "StateName"), "---Select A State ---", new { @class = "selectpicker" })
        <span class="err-msg">@Html.ValidationMessageFor(model => model.location_state)</span>
    </div>
    <div class="col-md-6 required">
        <label>Zip <span>*</span>:</label>
        @Html.TextBoxFor(model => model.location_zip, new { @class = "form-control" })
        <span class="err-msg">@Html.ValidationMessageFor(model => model.location_zip)</span>
    </div>
    <div class="col-md-6 required">
        <label>Contact Name (Not Published) <span>*</span>:</label>
        @Html.TextBoxFor(model => model.ContactName, new { @class = "form-control" })
        <span class="err-msg">@Html.ValidationMessageFor(model => model.ContactName)</span>
    </div>
    <div class="col-md-6 required">
        <label>Contact Email (Not Published) <span>*</span>:</label>
        @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control" })
        <span class="err-msg">@Html.ValidationMessageFor(model => model.EmailAddress)</span>
    </div>
    <div class="col-md-6 required">
        <label>Phone <span>*</span>:</label>
        @Html.TextBoxFor(model => model.phone, new { @class = "form-control", onkeydown = "javascript:backspacerDOWN(this,event);", onkeyup = "javascript:backspacerUP(this,event);" })
        <span>eg. - (xxx) xxx-xxxx </span>
        <span class="err-msg">@Html.ValidationMessageFor(model => model.phone)</span>
    </div>
    <div class="col-md-6 required">
        <label>Website <span>*</span>:</label>
        @Html.TextBoxFor(model => model.website, new { @class = "form-control" })
        <span class="err-msg">@Html.ValidationMessageFor(model => model.website)</span>
    </div>
    <div class="col-md-6 required">
        <label>Destination Website <span>*</span>:</label>
        @Html.TextBoxFor(model => model.DestinationWebsite, new { @class = "form-control" })
        <span class="err-msg">@Html.ValidationMessageFor(model => model.DestinationWebsite)</span>
        <br />
        <br />
    </div>
    <div class="col-md-12 required">
        <div class="atleastonecheckbox">
            <label>Primary Focus <span>*</span>: <span class="err-msg">@Html.ValidationMessageFor(x => x.PrimaryFocus)</span></label>

            <div class="row">
                @for (int i = 0; i < Model.List_chckBox_PrimayFocus.Count; i++)
                {
                    <div class="col-md-4 checkbox">
                        @Html.CheckBoxFor(x => x.List_chckBox_PrimayFocus[i].IsSelected)
                        @Html.LabelFor(x => x.List_chckBox_PrimayFocus[i].IsSelected, Model.List_chckBox_PrimayFocus[i].Text)
                        @Html.HiddenFor(x => x.List_chckBox_PrimayFocus[i].Value)
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <label>Services Provided :</label>

        <div class="row">
            @for (int i = 0; i < Model.List_chckBox_ServicesProvided.Count; i++)
            {
                <div class="col-md-4 checkbox">
                    @Html.CheckBoxFor(x => x.List_chckBox_ServicesProvided[i].IsSelected)
                    @Html.LabelFor(x => x.List_chckBox_ServicesProvided[i].IsSelected, Model.List_chckBox_ServicesProvided[i].Text)
                    @Html.HiddenFor(x => x.List_chckBox_ServicesProvided[i].Value)
                </div>
            }
        </div>
    </div>
    <div class="col-md-12 required">
        <div class="atleastonecheckbox">
            <label>Type of care <span>*</span>: <span class="err-msg">@Html.ValidationMessageFor(x => x.TypeOfCare)</span></label>

            <div class="row">
                @for (int i = 0; i < Model.List_chckBox_TypeOfCare.Count; i++)
                {
                    <div class="col-md-4 checkbox">
                        @Html.CheckBoxFor(x => x.List_chckBox_TypeOfCare[i].IsSelected)
                        @Html.LabelFor(x => x.List_chckBox_TypeOfCare[i].IsSelected, Model.List_chckBox_TypeOfCare[i].Text)
                        @Html.HiddenFor(x => x.List_chckBox_TypeOfCare[i].Value)
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <label>Special Programs :</label>

        <div class="row">
            @for (int i = 0; i < Model.List_chckBox_Specialprograms.Count; i++)
            {
                <div class="col-md-4 checkbox">
                    @Html.CheckBoxFor(x => x.List_chckBox_Specialprograms[i].IsSelected)
                    @Html.LabelFor(x => x.List_chckBox_Specialprograms[i].IsSelected, Model.List_chckBox_Specialprograms[i].Text)
                    @Html.HiddenFor(x => x.List_chckBox_Specialprograms[i].Value)
                </div>
            }
        </div>
    </div>
    <div class="col-md-12 required">
        <div class="atleastonecheckbox">
            <label>Forms Of Payment Accepted <span>*</span>: <span class="err-msg">@Html.ValidationMessageFor(x => x.FormsOfPaymentAccepted)</span></label>

            <div class="row">
                @for (int i = 0; i < Model.List_chckBox_FormsOfPaymentAccepted.Count; i++)
                {
                    <div class="col-md-4 checkbox">
                        @Html.CheckBoxFor(x => x.List_chckBox_FormsOfPaymentAccepted[i].IsSelected)
                        @Html.LabelFor(x => x.List_chckBox_FormsOfPaymentAccepted[i].IsSelected, Model.List_chckBox_FormsOfPaymentAccepted[i].Text)
                        @Html.HiddenFor(x => x.List_chckBox_FormsOfPaymentAccepted[i].Value)
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <label>Payment Assistance :</label>

        <div class="row">
            @for (int i = 0; i < Model.List_chckBox_PaymentAssistance.Count; i++)
            {
                <div class="col-md-4 checkbox">
                    @Html.CheckBoxFor(x => x.List_chckBox_PaymentAssistance[i].IsSelected)
                    @Html.LabelFor(x => x.List_chckBox_PaymentAssistance[i].IsSelected, Model.List_chckBox_PaymentAssistance[i].Text)
                    @Html.HiddenFor(x => x.List_chckBox_PaymentAssistance[i].Value)
                </div>
            }
        </div>
    </div>
    <div class="col-md-12">
        <label>Special Language services :</label>

        <div class="row">
            @for (int i = 0; i < Model.List_chckBox_LanguageServices.Count; i++)
            {
                <div class="col-md-4 checkbox">
                    @Html.CheckBoxFor(x => x.List_chckBox_LanguageServices[i].IsSelected)
                    @Html.LabelFor(x => x.List_chckBox_LanguageServices[i].IsSelected, Model.List_chckBox_LanguageServices[i].Text)
                    @Html.HiddenFor(x => x.List_chckBox_LanguageServices[i].Value)
                </div>
            }
        </div>
    </div>
    <div class="col-md-12 required">
        <div class="maxthreecheckboxes">
            <label>Pick Max 5 Categories</label>
            <label>Which specialization(s) best describe your offering(s). Pick up to 5. All providers will be placed in the Drugs & Alcohol Treatment section of Sober.com. <span class="err-msg"></span></label>

            <div class="row">
                @for (int i = 0; i < Model.List_chckBox_AssociatedCategories.Count; i++)
                {
                    <div class="col-md-4 checkbox">
                        @if (Model.List_chckBox_AssociatedCategories[i].Text == "6" || Model.List_chckBox_AssociatedCategories[i].Text == "15")
                        {
                            if (Model.List_chckBox_AssociatedCategories[i].Text == "6")
                            {
                                Model.List_chckBox_AssociatedCategories[i].IsSelected = true;
                            }


                            @Html.CheckBoxFor(x => x.List_chckBox_AssociatedCategories[i].IsSelected, new { disabled = "disabled" })
                        }
                        else
                        {
                            @Html.CheckBoxFor(x => x.List_chckBox_AssociatedCategories[i].IsSelected)
                        }
                        @Html.LabelFor(x => x.List_chckBox_AssociatedCategories[i].IsSelected, Model.List_chckBox_AssociatedCategories[i].Value)
                        @Html.HiddenFor(x => x.List_chckBox_AssociatedCategories[i].Value)
                        @Html.HiddenFor(x => x.List_chckBox_AssociatedCategories[i].Text)
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {        
        $('#Website').change(function () {
            var destination = $('#DestinationWebsite').val();

            if (destination == "") {
                $('#DestinationWebsite').val($(this).val());
                $('#DestinationWebsite').siblings('span').text('');
            }
        });

        $('#DestinationWebsite').change(function () {
            if ($(this).val() == "") {
                $(this).siblings('span').text('The DestinationWebsite field is required.');
            }
        });
    });
</script>