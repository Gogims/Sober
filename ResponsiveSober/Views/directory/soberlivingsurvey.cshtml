@model SoberModel.SoberLivingSurveyEnhancedProfile

@{
    ViewBag.Title = Model.SoberLivingSurvey.SoberLivingCenterName + " " + Model.SamhsaListing.location_city + " " + Model.SamhsaListing.location_state + " - Reviews, cost, locations, and staff";
    Layout = "~/Views/Shared/_Master.cshtml";
    ViewBag.AddressLocation = Model.SamhsaListing.location_street1 + "," + Model.SamhsaListing.location_city + "," + Model.SamhsaListing.location_state + ",USA";
}

@section includes
{
    @Scripts.Render("~/bundles/profile_scripts")
    @Styles.Render("~/content/profile_css")
}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div class="content white-bg">
    <div class="container">
        <ol class="breadcrumb">
            <li><a href="@Url.Action("index", "home")">Home</a></li>
            <li>@Html.ActionLink("Directory", "index", "directory")</li>
        </ol>

        <div class="row profile" itemscope itemtype="http://schema.org/LocalBusiness">
            @{string logo = "";
            char[] splitOptions = { '|', ',' };
            char[] splitOptionsPipeOnly = { '|' };
            string[] logoList = null;
            }
            @if (@Model.MediaFiles != null && @Model.MediaFiles.Logo != null)
            {
                logoList = @Model.MediaFiles.Logo.Split(splitOptionsPipeOnly, StringSplitOptions.RemoveEmptyEntries);


            }
            @if (logoList != null && logoList.Count() > 0)
            {
                logo = logoList[0];
            }
            @if (!string.IsNullOrWhiteSpace(logo))
            {
                logo = "http://www.sober.com/contents/logo/" + logo;


                <div class="col-xs-12 col-md-2">
                    @if (@Model.SamhsaListing.ShowWebsite != null && @Model.SamhsaListing.ShowWebsite == true)
                    {
                        string website = "http://" + @Model.SamhsaListing.DestinationWebsite;
                        <a href="@website" itemprop="url">
                            <img class="title-logo-cont" src="@logo" itemprop="logo" alt="@Model.MediaFiles.Logo" />
                        </a>
                    }
                    else
                    {
                        <img class="title-logo-cont" src="@logo" itemprop="logo" alt="@Model.MediaFiles.Logo" />
                    }
                </div>

            }
            <div class="col-xs-12 col-md-6">
                <h3>
                    @if (@Model.SamhsaListing.ShowWebsite != null && @Model.SamhsaListing.ShowWebsite == true)
                    {
                        string website = "http://" + @Model.SamhsaListing.DestinationWebsite;

                        <a href="@website" itemprop="url">@Model.SoberLivingSurvey.name2</a>
                    }
                    else
                    {
                        <span itemprop="name">@Model.SoberLivingSurvey.name2</span>
                    }
                </h3>

                @{
                    string weeklyFeesFromStr = @Model.SoberLivingSurvey.Range_WeeklyFees_From;
                    decimal weeklyFeesFrom = 0;
                    bool success = decimal.TryParse(weeklyFeesFromStr, out weeklyFeesFrom);
                }

                @if (success)
                {
                    weeklyFeesFromStr = String.Format("{0:C0}", weeklyFeesFrom);
                }

                @{
                    string weeklyFeesToStr = @Model.SoberLivingSurvey.Range_WeeklyFees_To;
                    decimal weeklyFeesTo = 0;
                    success = decimal.TryParse(weeklyFeesToStr, out weeklyFeesTo);
                }

                @if (success)
                {
                    weeklyFeesToStr = String.Format("{0:C0}", weeklyFeesTo);
                }
                <div class="pricing-info">
                    <div class="cost-info"><strong>Avg. self pay cost</strong> @weeklyFeesFromStr - @weeklyFeesToStr</div>
                </div>
            </div>
            @if (Model.SamhsaListing.CertifiedPartner != null && Model.SamhsaListing.CertifiedPartner == true)
            {
                <div class="sob-cer last"></div>
            }
            <div class="col-md-4">
                @Html.Partial("_AdShareaholic", 16287609)
            </div>
        </div>

        @*TABS*@
        <ul class="nav nav-tabs responsive" id="myTab">
            <li class="active"><a href="#overview" data-toggle="tab">Overview</a></li>

            @if (Model.reviewRating != null && Model.reviewRating.Status != 2)
            {
                <li><a href="#editorsReview" data-toggle="tab">Editor's Review</a></li>
            }

            <li><a id="contact_us" href="#contactus" data-toggle="tab">Contact Us</a></li>
            <li><a href="#maps" data-toggle="tab">Maps</a></li>
            <li id="write_user_review"><a href="#writeAUserReview" data-toggle="tab">Write a User Review</a></li>
        </ul>

        @*Content of each tab*@
        <div class="tab-content responsive">
            <div class="tab-pane active" id="overview">
                @Html.HiddenFor(x => x.SamhsaListing.location_street1)
                @Html.HiddenFor(x => x.SamhsaListing.location_city)
                @Html.HiddenFor(x => x.SamhsaListing.location_state)
                <input type="hidden" id="Lat" value="@Model.SamhsaListing.latitude" />
                <input type="hidden" id="Lng" value="@Model.SamhsaListing.longitude" />

                <div class="row">
                    <div class="col-md-12">
                        <div class="col-xs-12 col-md-6">
                            <div id="myCarousel" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    @{
                                        string image = "";
                                        int count = 0;
                                        List<string> listvideo = new List<string>();
                                        List<string> listimg = new List<string>();
                                    }
                                    @if (@Model.MediaFiles != null && @Model.MediaFiles.Image != null)
                                    {
                                        image = @Model.MediaFiles.Image;
                                    }
                                    @{
                                        string[] imageList = image.Split(splitOptionsPipeOnly, StringSplitOptions.RemoveEmptyEntries);
                                        string picture = "";
                                        string Videos = "";
                                        if (@Model.MediaFiles != null && @Model.MediaFiles.Video != null)
                                        {
                                            Videos = @Model.MediaFiles.Video;
                                        }
                                        string[] videoList = Videos.Split(splitOptionsPipeOnly, StringSplitOptions.RemoveEmptyEntries);
                                    }

                                    @foreach (var item in videoList)
                                    {
                                        string video = item;
                                        string videoId = "";

                                        if (video != null && !string.IsNullOrWhiteSpace(video))
                                        {
                                            string[] splitStr = video.Split(splitOptions, System.StringSplitOptions.RemoveEmptyEntries);
                                            if (splitStr != null && splitStr.Count() > 0)
                                            {

                                                int index = splitStr[0].LastIndexOf("?v=");
                                                if (index < 1)
                                                {
                                                    index = splitStr[0].LastIndexOf("&v=");
                                                    int ampFound = -1;
                                                    string tempStr = splitStr[0].Substring(index + 3);
                                                    ampFound = tempStr.IndexOf("&");
                                                    if (ampFound > 0)
                                                    {
                                                        tempStr = tempStr.Substring(0, ampFound);
                                                    }
                                                    videoId = "http://www.youtube.com/embed/" + tempStr;
                                                }
                                                else
                                                {
                                                    int ampFound = -1;
                                                    string tempStr = splitStr[0].Substring(index + 3);
                                                    ampFound = tempStr.IndexOf("&");
                                                    if (ampFound > 0)
                                                    {
                                                        tempStr = tempStr.Substring(0, ampFound);
                                                    }
                                                    videoId = "http://www.youtube.com/embed/" + tempStr;
                                                }
                                                if (index < 1)
                                                {
                                                    index = splitStr[0].LastIndexOf("/");
                                                    int ampFound = -1;
                                                    string tempStr = splitStr[0].Substring(index + 1);
                                                    ampFound = tempStr.IndexOf("&");
                                                    if (ampFound > 0)
                                                    {
                                                        tempStr = tempStr.Substring(0, ampFound);
                                                    }
                                                    videoId = "http://www.youtube.com/embed/" + tempStr;
                                                }

                                                listvideo.Add(videoId);
                                            }
                                        }
                                    }

                                    @foreach (var item in listvideo)
                                    {
                                        <li data-target="#myCarousel" data-slide-to="@count"></li>
                                        count++;
                                    }

                                    @if (string.IsNullOrWhiteSpace(image))
                                    {
                                        picture = "http://www.sober.com/contents/pictures/default-profile-img.jpg";
                                        listimg.Add(picture);

                                        <li data-target="#myCarousel" data-slide-to="@count"></li>
                                        count++;
                                    }
                                    @{
                                        string profile = "";
                                    }

                                    @if (@Model.MediaFiles != null)
                                    {
                                        profile = @Model.MediaFiles.ProfileImage;
                                    }

                                    @if (profile != null && !string.IsNullOrWhiteSpace(profile))
                                    {
                                        <li data-target="#myCarousel" data-slide-to="@count"></li>
                                        count++;
                                    }

                                    @if (!string.IsNullOrWhiteSpace(image))
                                    {
                                        foreach (string img in imageList)
                                        {
                                            if (profile != null && img.Trim().Equals(profile.Trim()))
                                            {
                                                continue;
                                            }
                                            picture = "http://www.sober.com/contents/pictures/" + img;
                                            picture = picture.Replace(" ", "%20");
                                            listimg.Add(picture);

                                            <li data-target="#myCarousel" data-slide-to="@count"></li>
                                            count++;
                                        }
                                    }
                                </ol>

                                <div class="carousel-inner">
                                    @foreach (var videoId in listvideo)
                                    {
                                        <div class="item">
                                            <iframe src="@videoId" width="450" height="350" frameborder="0" allowfullscreen></iframe>
                                        </div>
                                    }

                                    @if (profile != null && !string.IsNullOrWhiteSpace(profile))
                                    {
                                        picture = "http://www.sober.com/contents/pictures/" + profile;
                                        picture = picture.Replace(" ", "%20");
                                        listimg.Add(picture);

                                        <div class="item">
                                            <a href="@picture" data-lightbox="pictures">
                                                <img src="@picture" itemprop="photo" alt="@profile" />
                                            </a>
                                        </div>
                                    }

                                    @foreach (var imgId in listimg)
                                    {
                                        <div class="item">
                                            <a href="@imgId" data-lightbox="pictures">
                                                <img src="@imgId" itemprop="photo" />
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>

                        <div class="col-xs-12 col-md-6">
                            <h2>@Model.SoberLivingSurvey.name2</h2>
                            <div class="address" itemprop="address" itemscope itemtype="http://schema.org/PostalAddress">
                                <strong>
                                    <h2 itemprop="streetAddress">@Model.SamhsaListing.location_street1</h2>
                                    <h2>
                                        <span itemprop="addressLocality">@Model.SamhsaListing.location_city</span>,
                                        <span itemprop="addressRegion">@Model.SamhsaListing.location_state</span>
                                        <span itemprop="postalCode">@Model.SamhsaListing.location_zip</span>
                                    </h2>
                                </strong>
                            </div>

                            <label class="big-link" itemprop="telephone">@Model.SamhsaListing.phone</label><br />

                            @if (@Model.SamhsaListing.ShowWebsite != null && @Model.SamhsaListing.ShowWebsite == true)
                            {
                                string website = "http://" + @Model.SamhsaListing.DestinationWebsite;
                                <a class="big-link" href="@website" itemprop="url">
                                    @Model.SamhsaListing.website
                                </a><br />
                            }

                            <br />

                            <label><strong>Primary focus of Provider</strong></label>
                            <ul>
                                @{
                                    string primaryFocusStr = "";
                                    if (@Model.SamhsaListing.Primary_Focus != null)
                                    {
                                        primaryFocusStr = @Model.SamhsaListing.Primary_Focus;
                                    }
                                    string[] primaryFocusList = primaryFocusStr.Split(splitOptions, StringSplitOptions.RemoveEmptyEntries);
                                }
                                @foreach (string focus in primaryFocusList)
                                {
                                    <li>@focus</li>
                                }
                            </ul>

                            <label><strong>Service Provided</strong></label>
                            <ul>
                                @{
                                    string servicesStr = "";
                                    if (@Model.SamhsaListing.Services_Provided != null)
                                    {
                                        servicesStr = @Model.SamhsaListing.Services_Provided;
                                    }
                                    string[] services = servicesStr.Split(splitOptions, StringSplitOptions.RemoveEmptyEntries);
                                }
                                @foreach (string service in services)
                                {
                                    <li>@service</li>
                                }
                            </ul>

                            <label><strong>Type of Care</strong></label>
                            <ul>
                                @{
                                    string typeOfCare = "None Listed";
                                    if (@Model.SamhsaListing.Type_of_Care != null)
                                    {
                                        typeOfCare = @Model.SamhsaListing.Type_of_Care;
                                    }

                                    string[] careTypes = typeOfCare.Split('|');
                                }
                                @foreach (string care in careTypes)
                                {
                                    <li>@care</li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <h4 class="panel box blue-bg">Description</h4>
                        <p class="desc" itemprop="description">@Model.SoberLivingSurvey.OtherInfo </p>
                    </div>

                    <div class="col-md-12">
                        <h4 class="panel box blue-bg">Other Information</h4>
                        <ul class="row info-list">
                            <li class="col-md-6">
                                <h5>Gender</h5>
                                <p>@Model.SoberLivingSurvey.Gender</p>
                            </li>
                            <li class="col-md-6">
                                <h5>Capacity (# of beds)</h5>
                                <p>@Model.SoberLivingSurvey.NoOFBeds</p>
                            </li>
                            <li class="col-md-6">
                                <h5>Pets Allowed?</h5>
                                @if (Model.SoberLivingSurvey.PetsAllowed.HasValue)
                                {
                                    if (@Model.SoberLivingSurvey.PetsAllowed.Value == true)
                                    {
                                        <p>Yes</p>
                                    }
                                    else
                                    {
                                        <p>No</p>
                                    }
                                }
                                else
                                {
                                    <p>Unknown</p>
                                }
                            </li>
                        </ul>
                    </div>

                    <div class="col-md-12">
                        <h4 class="panel box blue-bg">Lease Terms</h4>
                        <ul class="row info-list">
                            <li class="col-md-6">
                                @{
                                    string securityDepositStr = @Model.SoberLivingSurvey.Security_Deposit;
                                    decimal securityDeposit = 0;
                                    success = decimal.TryParse(securityDepositStr, out securityDeposit);

                                }
                                @if (success)
                                {
                                    securityDepositStr = String.Format("{0:C0}", securityDeposit);
                                }

                                <h5>Security Deposit</h5>
                                <p>@securityDepositStr </p>
                            </li>
                            <li class="col-md-6">
                                <h5>Range of Weekly Fees</h5>
                                <p>@weeklyFeesFromStr - @weeklyFeesToStr</p>
                            </li>
                            <li class="col-md-6">
                                <h5>Stay Requirement (in weeks)</h5>
                                <p>@Model.SoberLivingSurvey.stay_requirement </p>
                            </li>
                            <li class="col-md-6">
                                <h5>Rent Required</h5>
                                @if (Model.SoberLivingSurvey.rent_required_at_move_in != null && (bool)Model.SoberLivingSurvey.rent_required_at_move_in)
                                {
                                    <p>Rent required at move in</p>
                                }
                                @if (Model.SoberLivingSurvey.rent_required_at_move_in == null || (bool)Model.SoberLivingSurvey.rent_required_at_move_in == false)
                                {
                                    <p>Rent not required at move in</p>
                                }
                            </li>
                        </ul>
                    </div>



                    <div class="col-md-12">
                        <h4 class="panel box blue-bg">Employment</h4>
                        <ul class="row info-list">
                            <li class="col-md-6">
                                @{
                                    string employmentRequired = @Model.SoberLivingSurvey.employment_required;
                                    bool? highriskEmployment = @Model.SoberLivingSurvey.High_Risk_Employment;
                                    string highRisk = "Yes";

                                }
                                @if (highriskEmployment == null || highriskEmployment == false)
                                {
                                    highRisk = "No";
                                }
                                <h5>Employment Required</h5>
                                <p>@employmentRequired </p>
                            </li>
                            <li class="col-md-6">
                                <h5>Is High Risk Employment Allowed?</h5>
                                <p>@highRisk  (e.g., cab driving, working where drugs/alcohol are sold)</p>
                            </li>
                        </ul>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <h4 class="panel box blue-bg">Services offered</h4>
                                <ul class="row info-list">
                                    <li class="col-md-12">
                                        <h5>Services offered </h5>
                                        <div class="col-md-12">
                                            @{
                                                services = @Model.SoberLivingSurvey.Services_offered.Split(splitOptions, StringSplitOptions.RemoveEmptyEntries);

                                                <ul>
                                                    @foreach (string service in services)
                                                    {
                                                        <li>@service</li>
                                                    }
                                                </ul>

                                            }
                                        </div>
                                    </li>
                                </ul>
                            </div>

                            <div class="col-md-6">
                                <h4 class="panel box blue-bg">Resident Requirements</h4>
                                <ul class="row info-list">
                                    <li class="col-md-12">
                                        <h5>Resident Requirements</h5>
                                        <div class="col-md-12">
                                            @{
                                                string[] residentRequirements = @Model.SoberLivingSurvey.Resident_requirements.Split('|');

                                                <ul>
                                                    @foreach (string requirement in residentRequirements)
                                                    {
                                                        <li>@requirement</li>
                                                    }
                                                </ul>

                                            }
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <h4 class="panel box blue-bg">Facility/organization Type</h4>
                                <ul class="row info-list">
                                    <li class="col-md-12">
                                        <h5>Facility/organization Type</h5>
                                        <div class="col-md-12">
                                            @{
                                                if (string.IsNullOrWhiteSpace(Model.SoberLivingSurvey.FacilityType))
                                                {
                                                    Model.SoberLivingSurvey.FacilityType = "";
                                                }

                                                string[] facilityType = @Model.SoberLivingSurvey.FacilityType.Split(splitOptions, StringSplitOptions.RemoveEmptyEntries);

                                                <ul>
                                                    @foreach (string facility in facilityType)
                                                    {
                                                        <li>@facility</li>
                                                    }
                                                </ul>
                                            }
                                        </div>
                                    </li>
                                </ul>
                            </div>

                            <div class="col-md-6">
                                <h4 class="panel box blue-bg">Attractions of Interest</h4>
                                <ul class="row info-list">
                                    <li class="col-md-12">
                                        <h5>Attractions of Interest</h5>
                                        <div class="col-md-12">
                                            @{
                                                string[] attractions = @Model.SoberLivingSurvey.attractions_of_interest.Split(splitOptions, StringSplitOptions.RemoveEmptyEntries);

                                                <ul>
                                                    @foreach (string attraction in attractions)
                                                    {
                                                        <li>@attraction</li>
                                                    }
                                                </ul>
                                            }
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="col-md-6">
                                <h4 class="panel box blue-bg">Neighborhood Description</h4>
                                <ul class="row info-list">
                                    <li class="col-md-12">
                                        <h5>Neighborhood Description</h5>
                                        <p>@Model.SoberLivingSurvey.Disc_neighborhood</p>
                                    </li>
                                </ul>
                            </div>

                            @if (@Model.MediaFiles != null && !string.IsNullOrEmpty(Model.MediaFiles.Rules_Image))
                            {
                                <div class="col-md-12">
                                    <h4 class="panel box blue-bg">Brochures, applications, fee schedules, and rules</h4>
                                    <ul class="row info-list">
                                        @{
                                string rules = "";
                                rules = @Model.MediaFiles.Rules_Image;
                                string[] rulesList = rules.Split(splitOptionsPipeOnly, StringSplitOptions.RemoveEmptyEntries);
                                        }

                                        @foreach (string rule in rulesList)
                                        {
                                            picture = "http://www.sober.com/contents/rules/" + rule;
                                            picture = picture.Replace(" ", "%20");

                                            if (rule.Contains(".pdf"))
                                            {
                                                <li class="col-md-3"><a href="@picture" class="pdf">@rule</a></li>
                                            }
                                            else
                                            {
                                                <li class="col-md-3"><a href="@picture">@rule</a></li>
                                            }
                                        }
                                    </ul>
                                </div>
                            }
                        </div>
                    </div>

                    <div id="reviewSection" class="col-md-12">
                        <h4 class="panel box blue-bg">@Model.SamhsaListing.name1 - Rehab Reviews (from Users)</h4>
                        @{Html.RenderAction("ViewUserReview", "UserReview", new { facility = Model.SamhsaListing.PageName });}
                    </div>


                    <div class="col-md-12">
                        @{
                            SoberBLL.Directory.BLL_Listings bllListings = new SoberBLL.Directory.BLL_Listings();
                            var mapsListings = bllListings.GetNearbyFreeListingsForMaps(Model.SamhsaListing);
                            ViewBag.CurrentProfileName = Model.SamhsaListing.PageName;
                        }
                        @Html.Partial("_mapsListings", mapsListings)
                    </div>
                </div>
            </div>

            @if (Model.reviewRating != null)
            {
                <div class="tab-pane" id="editorsReview">
                    @if (Model.reviewRating != null)
                    {
                        @Html.Partial("_reviewrating", Model.reviewRating)
                    }
                </div>
            }

            <div class="tab-pane" id="contactus">
                @{
                    SoberModel.InquiryForm inquiry = new SoberModel.InquiryForm();
                    inquiry.facilityType = "SoberLivingSurvey";
                    inquiry.facilityName = @Model.SamhsaListing.name1;
                    inquiry.PageName = @Model.SamhsaListing.PageName;
                }
                @Html.Partial("create", @inquiry)
            </div>

            <div class="tab-pane" id="maps">
                <div id="map" style="width: 100%; height: 500px"></div>
            </div>

            <div class="tab-pane" id="writeAUserReview">
                @Html.Hidden("isAuthenticated", HttpContext.Current.User.Identity.IsAuthenticated)
                @if (HttpContext.Current.User.Identity.IsAuthenticated)
                {
                    SoberBLL.UserReview.UserReviewForm userReview = new SoberBLL.UserReview.UserReviewForm();
                    userReview.PageName = @Model.SamhsaListing.PageName;
                    Html.RenderPartial("~/Views/UserReview/WriteUserReview.cshtml", userReview);
                }
                else
                {
                    @Html.Action("_LoginPartial", "Account", new { returnUrl = Request.RawUrl + "#write-a-review" })
                }
            </div>
        </div>
    </div>

    <div>
        @Html.Partial("_AdResponsive")
    </div>
</div>

<script type="text/javascript" src="http://www.google.com/recaptcha/api/js/recaptcha_ajax.js"></script>

<script>
    function showrecaptcha() {
        //$('#write_user_review').click(function () {
        //    if ($('#isAuthenticated').val().toLowerCase() != "true") {
        //        Recaptcha.create("6LeKU-kSAAAAAI-fjV99Gn18MFa6n_wW9VP8Tosg", "register_recaptcha_box", "");
        //    }
        //});
        $('#contact_us').click(function () {
            Recaptcha.create("6LeKU-kSAAAAAI-fjV99Gn18MFa6n_wW9VP8Tosg", "contactus_recaptcha_box", "");
        });
    }

    $(document).ready(function () {
        window.scrollTo(0, 0);
        showrecaptcha();
        $('#myCarousel').children('ol').children('li').first().addClass("active");
        $('#myCarousel').children('div').children('div').first().addClass("active");

        var tab = window.location.hash.substr(1);

        if (tab == 'contactUS') {
            $('a[href$="#contactus"]').click();
        }
        else if (tab == 'userreview') {
            $('a[href$="#writeAUserReview"]').click();
        }
        else if (tab == 'editorsreview') {
            $('a[href$="#editorsReview"]').click();
        }

        $('.nav-tabs a').click(function () {
            if ($(this).attr('href') == '#maps') {
                $('#maps').show();

                if ($('#map').text() == "") {
                    ShowMap();
                }
            }
            else {
                $('#maps').hide();
            }
        });
    });

</script>

<script>
    function SetLatLng() {
        var lat = document.getElementById('Lat').value;
        var lng = document.getElementById('Lng').value;
        if (lat == "" || lng == "") {
            var url = "http://maps.googleapis.com/maps/api/geocode/json?address=" + document.getElementById('SamhsaListing_location_street1').value + "+" + document.getElementById('SamhsaListing_location_city').value + "+" + document.getElementById('SamhsaListing_location_state').value + "+USA" + "&sensor=false";

            $.ajax({
                type: 'GET',
                url: url,
                dataType: 'json',
                success: function (result) {
                    if (result.status != null && result.status == "OK") {
                        var lat = result.results[0].geometry.location.lat;
                        var lng = result.results[0].geometry.location.lng;
                        document.getElementById('Lat').value = lat;
                        document.getElementById('Lng').value = lng;
                        //     var myLatlng = new google.maps.LatLng(lat, lng);
                        //     return myLatlng;
                    }
                    else {

                    }
                },
                data: {},
                async: false
            });
        }
    }

    var map = null;

    function ShowMap() {
        SetLatLng();
        // Creating a MapOptions object with the required properties
        var lat = document.getElementById('Lat').value;
        var lng = document.getElementById('Lng').value;
        var myLatlng = new google.maps.LatLng(lat, lng);
        var options = {
            zoom: 15,
            center: myLatlng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        // Creating the map
        map = new google.maps.Map(document.getElementById('map'), options);

        var marker = new google.maps.Marker({
            position: myLatlng,
            map: map,
            title: 'Facility Location'
        });
    }

</script>

