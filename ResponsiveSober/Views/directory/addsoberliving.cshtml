@model SoberBLL.AddListings.SoberLivingSurvey
@{
    ViewBag.Title = "addsoberliving";
    Layout = "~/Views/Shared/_Master.cshtml";
    if (ViewBag.partialProfile != null)
    {
        HtmlHelper.ClientValidationEnabled = false;
    }
}
<script src="~/Scripts/PhoneMask.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Html.BeginForm("addsoberliving", "directory", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="content white-bg">
        <div class="container">
            <h1>Sober.com Treatment Facility Supplemental Questionnaire</h1>
            <p>
                Please fill this form for each facility. If all locations offer exactly the same services, than fill only one form and also provide us the addresses for each facility in an email to <a href="mailto:clients@sober.com">clients@sober.com</a>.
                <br />
                Fields marked <span>*</span> are mandatory
            </p>

            <div class="row">
                @Html.HiddenFor(model => model.ImagesFolder)
                @Html.HiddenFor(model => model.User_Id)
                @Html.HiddenFor(model => model.CreatedOn)
                @Html.HiddenFor(model => model.ModifiedOn)

                <input type="hidden" name="pName" value="@ViewBag.tmpPageName" />
                <input type="hidden" name="lisId" value="@ViewBag.tmpListingId" />

                <div class="row">
                    <div class="col-md-12 panel-group">
                        <h4 class="panel box expander">Your details</h4>
                    </div>
                </div>

                <div class="panel-cont row">
                    <div class="col-md-6 form-group required">
                        <label>Sober Living Center Name <span>*</span>:</label>
                        @Html.TextBoxFor(model => model.SoberLivingCenterName, new { @class = "form-control" })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.SoberLivingCenterName)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Street Address of Residence<span>*</span>:</label>
                        @Html.TextBoxFor(model => model.Address, new { @class = "form-control" })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.Address)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>City <span>*</span>:</label>
                        @Html.TextBoxFor(model => model.City, new { @class = "form-control" })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.City)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>State <span>*</span>:</label>
                        @Html.DropDownListFor(model => model.State, new SelectList(ViewBag.States, "StateAbbreviation", "StateName", Model.State), new { @class = "selectpicker" })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.State)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Zip Code <span>*</span>:</label>
                        @Html.TextBoxFor(model => model.ZipCode, new { @class = "form-control" })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.ZipCode)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Admissions Phone <span>*</span>:</label>
                        @Html.TextBoxFor(model => model.Admissions_Phone, new { @class = "form-control", onkeydown = "javascript:backspacerDOWN(this,event);", onkeyup = "javascript:backspacerUP(this,event);" })
                        <span>eg. - (xxx) xxx-xxxx </span>
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.Admissions_Phone)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Email Address <span>*</span>:</label>
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.Email)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Website <span>*</span>:</label>
                        @Html.TextBoxFor(model => model.Website, new { @class = "form-control" })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.Website)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Contact Name <span>*</span>:</label>
                        @Html.TextBoxFor(model => model.ContactName, new { @class = "form-control" })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.ContactName)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Destination Website <span>*</span>:</label>
                        @Html.TextBoxFor(model => model.DestinationWebsite, new { @class = "form-control" })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.DestinationWebsite)</span>
                    </div>
                    <div class="col-md-12 form-group aic">
                        <label>Type of Facility</label>
                        <div class="row">
                            @foreach (var rdbtn in Model.rdList_FacilityType)
                            {
                                <div class="col-md-3">
                                    <div class="radio">
                                        <label>
                                            @Html.RadioButtonFor(model => model.FacilityType, rdbtn.Value)
                                            <label>@rdbtn.Text</label>
                                            @Html.HiddenFor(x => rdbtn.Value)
                                            @Html.HiddenFor(x => rdbtn.Text)
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-12 form-group aic">
                        <label>Gender</label>

                        <div class="row">
                            @foreach (var rdbtn in Model.rdList_Gender)
                            {
                                <div class="col-md-3">
                                    <div class="radio">
                                        <label>
                                            @Html.RadioButtonFor(model => model.Gender, rdbtn.Value)
                                            <label>@rdbtn.Text</label>
                                            @Html.HiddenFor(x => rdbtn.Value)
                                            @Html.HiddenFor(x => rdbtn.Text)
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-12 form-group aic">
                        <label>Organization type</label>

                        <div class="row">
                            @foreach (var rdbtn in Model.rdList_Organization_type)
                            {
                                <div class="col-md-3">
                                    <div class="radio">
                                        <label>
                                            @Html.RadioButtonFor(model => model.Organization_type, rdbtn.Value)
                                            <label>@rdbtn.Text</label>
                                            @Html.HiddenFor(x => rdbtn.Value)
                                            @Html.HiddenFor(x => rdbtn.Text)
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Number of beds <span>*</span>:</label>
                        <div class="row">
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.NoOFBeds, new { @class = "form-control numbersOnly" })
                            </div>
                        </div>
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.NoOFBeds)</span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <h4 class="blue-bg box panel">Lease Terms</h4>
                    </div>

                    <div class="col-md-6 form-group required">
                        <label>Security deposit required (0 if none) <span>*</span>:</label>
                        <div class="row">
                            <div class="col-md-1">$</div>
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.Security_Deposit, new { @class = "form-control numbersOnly" })
                            </div>
                        </div>
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.Security_Deposit)</span>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Range of typically weekly fees (all costs)  <span>*</span>:</label>
                        <div class="row">
                            <div class="col-md-1">$</div>
                            <div class="col-md-4">@Html.TextBoxFor(model => model.Range_WeeklyFees_From, new { @class = "form-control numbersOnly" })</div>
                            <div class="col-md-2">to   $</div>
                            <div class="col-md-4">@Html.TextBoxFor(model => model.Range_WeeklyFees_To, new { @class = "form-control numbersOnly" })</div>
                        </div>

                        <span class="err-msg">@Html.ValidationMessageFor(model => model.Range_WeeklyFees_To)</span>
                    </div>
                    <div class="col-md-6 form-group aic">
                        <label>First month's rent required at move in? :</label>

                        <div class="row">
                            @foreach (var rdbtn in Model.rdList_rent_required_at_move_in)
                            {
                                <div class="col-md-2">
                                    <div class="radio">
                                        <label>
                                            @Html.RadioButtonFor(model => model.rent_required, rdbtn.Value)
                                            <label>@rdbtn.Text</label>
                                            @Html.HiddenFor(x => rdbtn.Value)
                                            @Html.HiddenFor(x => rdbtn.Text)
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-6 form-group required">
                        <label>Minimum length of stay requirement in weeks  <span>*</span>:</label>
                        <div class="row">
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.stay_requirement, new { @class = "form-control numbersOnly" })
                            </div>
                        </div>
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.stay_requirement)</span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <h4 class="blue-bg box panel">Employment</h4>
                    </div>
                    <div class="col-md-12 form-group aic">
                        <label>Is employment required?</label>

                        <div class="row">
                            @for (int i = 0; i < Model.rdList_employment_required.Count; i++)
                            {
                                <div class="col-md-3">
                                    <div class="radio">
                                        <label>
                                            @Html.RadioButtonFor(x => x.employment_required, Model.rdList_employment_required[i].Value)
                                            @Html.LabelFor(x => x.rdList_employment_required[i], Model.rdList_employment_required[i].Text)
                                            @Html.HiddenFor(x => Model.rdList_employment_required[i].Value)
                                            @Html.HiddenFor(x => Model.rdList_employment_required[i].Text)
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-6 form-group aic">
                        <label>Is high risk employment allowed (e.g., cab driving, working where drugs/alcohol are sold)? </label>

                        <div class="row">
                            @foreach (var rdbtn in Model.rdList_High_Risk_Employment)
                            {
                                <div class="col-md-2">
                                    <div class="radio">
                                        <label>
                                            @Html.RadioButtonFor(model => model.High_Risk_Emp, rdbtn.Value)
                                            <label>@rdbtn.Text</label>
                                            @Html.HiddenFor(x => rdbtn.Value)
                                            @Html.HiddenFor(x => rdbtn.Text)
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-md-6 form-group required aic">
                        <label>Pets Allowed?<span>*</span></label>
                        <div class="col-md-12">
                            @foreach (var rdbtn in Model.rdList_pets_allowed)
                            {
                                <div class="col-md-2">
                                    <div class="radio">
                                        <label>
                                            @Html.RadioButtonFor(model => model._PetsAllowed, rdbtn.Value)
                                            <label>@rdbtn.Text</label>
                                            @Html.HiddenFor(x => rdbtn.Value)
                                            @Html.HiddenFor(x => rdbtn.Text)
                                        </label>
                                    </div>
                                </div>
                            }
                        </div>
                        <span class="err-msg">@Html.ValidationMessageFor(model => model._PetsAllowed)</span>
                    </div>
                    <div class="col-md-12 form-group required aic">
                        <label>Services offered (Please check all that apply) <span>*</span>:</label>
                        <div class="atleastonecheckbox row">
                            @for (int i = 0; i < Model.List_chckBox_Services_offered.Count; i++)
                            {
                                <div class="col-md-4">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(x => x.List_chckBox_Services_offered[i].IsSelected)
                                            @Html.LabelFor(x => x.List_chckBox_Services_offered[i].IsSelected, Model.List_chckBox_Services_offered[i].Text)
                                            @Html.HiddenFor(x => x.List_chckBox_Services_offered[i].Value)
                                            @Html.HiddenFor(x => x.List_chckBox_Services_offered[i].Text)
                                        </label>
                                    </div>
                                </div>
                            }
                            <span class="err-msg">@Html.ValidationMessageFor(model => model.Services_offered)</span>
                        </div>
                    </div>
                    <div class="col-md-12 form-group required aic">
                        <label>Resident's requirements (General - Please check all that are required) <span>*</span>:</label>
                        <div class="atleastonecheckbox row">
                            @for (int i = 0; i < Model.List_chckBox_Resident_requirements.Count; i++)
                            {
                                <div class="col-md-4">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(x => x.List_chckBox_Resident_requirements[i].IsSelected)
                                            @Html.LabelFor(x => x.List_chckBox_Resident_requirements[i].IsSelected, Model.List_chckBox_Resident_requirements[i].Text)
                                            @Html.HiddenFor(x => x.List_chckBox_Resident_requirements[i].Value)
                                            @Html.HiddenFor(x => x.List_chckBox_Resident_requirements[i].Text)
                                        </label>
                                    </div>
                                </div>
                            }
                            <span class="err-msg">@Html.ValidationMessageFor(model => model.Resident_requirements)</span>
                        </div>
                    </div>
                    <div class="col-md-12 form-group required aic">
                        <label>Amenities provided (please check all that apply) <span>*</span>:</label>
                        <div class="atleastonecheckbox row">
                            @for (int i = 0; i < Model.List_chckBox_Amenities_provided.Count; i++)
                            {
                                <div class="col-md-4">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(x => x.List_chckBox_Amenities_provided[i].IsSelected)
                                            @Html.LabelFor(x => x.List_chckBox_Amenities_provided[i].IsSelected, Model.List_chckBox_Amenities_provided[i].Text)
                                            @Html.HiddenFor(x => x.List_chckBox_Amenities_provided[i].Value)
                                            @Html.HiddenFor(x => x.List_chckBox_Amenities_provided[i].Text)
                                        </label>
                                    </div>
                                </div>
                            }
                            <span class="err-msg">@Html.ValidationMessageFor(model => model.Amenities_provided)</span>
                        </div>
                    </div>
                    <div class="col-md-12 form-group required">
                        <label>Name and Description of the neighborhood (limit 2,000 characters) <span>*</span>:</label>
                        @Html.TextAreaFor(model => model.Disc_neighborhood, new { @class = "form-control", rows = 2 })
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.Disc_neighborhood)</span>
                    </div>
                    <div class="col-md-12 form-group required">
                        <label>Local area attractions of interest (please only list top 5) <span>*</span>:</label>

                        <div class="row">
                            @for (int i = 0; i < Model.List_Txt_attractions_of_interest.Count(); i++)
                            {
                                <div class="col-md-6">
                                    @Html.TextBoxFor(x => x.List_Txt_attractions_of_interest[i], new { @class = "form-control" })
                                </div>
                            }
                        </div>
                        <span class="err-msg">@Html.ValidationMessageFor(model => model.attractions_of_interest)</span>
                    </div>
                    <div class="col-md-12 form-group">
                        <label>Any other information that you want to add about your Sober Living Residences. (If you already have a narrative on the sober.com website, you can skip this question.) Limit 2000 characters:</label>
                        @Html.TextAreaFor(model => model.OtherInfo, new { @class = "form-control", rows = 2 })
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <h4 class="blue-bg box panel">Media/Misc. Information Requests </h4>
                    </div>
                    <div class="col-md-12">
                        <p>
                            To enhance the exposure of your listing and to assist addicts/alcoholics and their loved ones, please attach the following items so we can include them in your Enhanced Sober.com Profile.&nbsp;
                            If you don't have these items readily available, you can always email them to us later at <a href="mailto:clients@sober.com">clients@sober.com</a>:
                        </p>
                    </div>

                    <div class="col-md-12 form-group">
                        <label>You Tube Video Url of your housing and/or TV commercials</label>

                        <div class="row">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="col-md-8">
                                        <input id="urlVideo" type="text" class="form-control" />
                                    </div>
                                    <div class="col-md-4">
                                        <button id="addVideo" type="button" class="btn">Add Video</button>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <label>Videos added: (click to remove)</label>
                                    <ol id="listVideo" style="list-style-type: decimal;"></ol>
                                </div>
                            </div>
                        </div>


                        <input style="display: none;" name="video" id="video" type="text" />
                    </div>
                    <div class="col-md-12 form-group">
                        @{
                            string src = "http://dev.sober.com/home/ImagePDF?folder=" + Model.ImagesFolder + "_pictures";
                        }
                        <label>Pictures of your housing (limit of 15) and Brochures, applications, fee schedules, and rules (Limit 5)</label>

                        <span>(gif,jpg,png) and pdf</span>
                        <iframe src="@src" style="width: 100%; height: 300px;"></iframe>
                    </div>
                    <div class="col-md-12 form-group">
                        @{
                            src = "http://dev.sober.com/home/logo?folder=" + Model.ImagesFolder + "_logo";
                        }
                        <label>Your logo</label>
                        <span>(gif,jpg,png)</span>
                        <iframe src="@src" style="width: 100%; height: 250px;"></iframe>
                    </div>
                </div>

                <div class="row">
                    <div class="checkbox">
                        <div class="atleastonecheckbox checkbox">
                            <label>
                                @Html.CheckBoxFor(model => model.AcceptTerms)
                                <label for="AcceptTerms">
                                    We hereby grant Sober.com, LLC a non-exclusive, perpetual license to publish the data provided by us in this questionnaire on the Company's website. 
                                    We understand we have the option to make periodic changes to the answers we provide in this questionnaire as conditions warrants.
                                </label>
                            </label>
                        </div>
                    </div>
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.AcceptTerms)</span>
                </div>

                <div class="row">
                    <div class="col-md-2">
                        <button name="submit" class="btn btn-primary" type="submit" id="addSoberLiving" value="Save">Save</button>
                    </div>
                </div>

            </div>
        </div>
    </div>
    
    <script type="text/javascript">
        function checkAtLeastOneCheckBox() {
            @if (ViewBag.partialProfile == null)
            {
            <text>
            var message = "";
            var display = false;
            var errcount = 0;
            $(".atleastonecheckbox").each(function (i) {
                if ($(this).find(":checked").length == 0) {
                    //message = $(this).find("label").first().text().replace(' *:','');
                    $(this).find("span.err-msg").first().text("Please select atleast one value");
                    errcount++;
                }
                else {
                    $(this).find("span.err-msg").first().text("");
                }
            });
            if (errcount > 0)
                return false;
            else
                return true;
            </text>
            }
            return true;
        }
        @if (ViewBag.partialProfile == null)
        {
            <text>
        $(document).ready(function () {
            $('#Website').change(function () {
                var destination = $('#DestinationWebsite').val();

                if (destination == "") {
                    $('#DestinationWebsite').val($(this).val());
                    $('#DestinationWebsite').siblings('span').text('');
                }
            });

            $("form").submit(function (e) {
                if (!checkAtLeastOneCheckBox()) {
                    e.preventDefault();
                    return;
                }

                $('#DestinationWebsite').val($('#Website').val());
                $('.panel-cont').show();
            });

            $('#addVideo').click(function () {
                if ($('#video').val().indexOf($('#urlVideo').val()) == -1) {
                    var vid = $('#video').val();
                    vid += $('#urlVideo').val() + "|";
                    $('#video').val(vid);

                    $('#listVideo').append("<li class ='anchor'>" + $('#urlVideo').val() + "</li>");
                    $('#urlVideo').val('');
                    console.log(vid);
                }
                else {
                    alert("This video has been added");
                }
            });

            $('#listVideo').on('click', 'li', function () {
                $(this).remove();
                var vid = $('#video').val().replace($(this).text() + '|', '');
                $('#video').val(vid);
            });
        });
        </text>
        }
    </script>
}
