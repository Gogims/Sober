@model SoberBLL.AddListings.SamhsaListingForm
@{
    ViewBag.Title = "addtreatmenthouse";
    Layout = "~/Views/Shared/_Master.cshtml";
}

<script src="~/Scripts/PhoneMask.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<div class="content white-bg">
    <div class="container">
        <ol class="breadcrumb">
            <li><a href="@Url.Action("index", "home")">Home</a></li>
            <li>@Html.ActionLink("Add your free listing", "addlisting", "directory")</li>
            <li class="active">Add treatment / Housing</li>
        </ol>
        
        @using (Html.BeginForm())
        {
            <div class="row">
                <div class="col-md-12">
                    <h2>Add Treatment Centers/Housing</h2>
                    <p>Fields marked <span style="color:red;">*</span> are mandatory</p>
                    <p>@Html.ValidationSummary()</p>
                </div>

                <div class="col-md-6 form-group required">
                    <label>Organization Name <span>*</span>:</label>
                    @Html.TextBoxFor(model => model.name1, new { @class = "form-control" })
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.name1)</span>
                </div>
                <div class="col-md-6 form-group">
                    <label>DBA Name:</label>
                    @Html.TextBoxFor(model => model.name2, new { @class = "form-control" })
                </div>
                <div class="col-md-6 form-group required">
                    <label>Street1 <span>*</span>:</label>
                    @Html.TextBoxFor(model => model.location_street1, new { @class = "form-control" })
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.location_street1)</span>
                </div>
                <div class="col-md-6 form-group">
                    <label>Street2 :</label>
                    @Html.TextBoxFor(model => model.location_street2, new { @class = "form-control" })
                </div>
                <div class="col-md-6 form-group required">
                    <label>City <span>*</span>:</label>
                    @Html.TextBoxFor(model => model.location_city, new { @class = "form-control" })
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.location_city)</span>
                </div>
                <div class="col-md-6 form-group required">
                    <label>State <span>*</span>:</label>
                    @Html.DropDownListFor(model => model.location_state, new SelectList(ViewBag.States, "StateAbbreviation", "StateName"), "---Select A State ---", new { @class = "selectpicker" })
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.location_state)</span>
                </div>
                <div class="col-md-6 form-group required">
                    <label>Zip <span>*</span>:</label>
                    @Html.TextBoxFor(model => model.location_zip, new { @class = "form-control" })
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.location_zip)</span>
                </div>
                <div class="col-md-6 form-group required">
                    <label>Contact Name (Not Published) <span>*</span>:</label>
                    @Html.TextBoxFor(model => model.ContactName, new { @class = "form-control" })
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.ContactName)</span>
                </div>
                <div class="col-md-6 form-group required">
                    <label>Contact Email (Not Published) <span>*</span>:</label>
                    @Html.TextBoxFor(model => model.EmailAddress, new { @class = "form-control" })
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.EmailAddress)</span>
                </div>
                <div class="col-md-6 form-group required">
                    <label>Phone <span>*</span>:</label>
                    @Html.TextBoxFor(model => model.phone, new { @class = "form-control", onkeydown = "javascript:backspacerDOWN(this,event);", onkeyup = "javascript:backspacerUP(this,event);" })
                    <span>eg. - (xxx) xxx-xxxx </span>
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.phone)</span>
                </div>
                <div class="col-md-6 form-group required">
                    <label>Website <span>*</span>:</label>
                    @Html.TextBoxFor(model => model.website, new { @class = "form-control" })
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.website)</span>
                    <br />
                    <br />
                </div>
                @Html.HiddenFor(x => x.DestinationWebsite)
            </div>
            
            <div class="row aic">
                <div class="col-md-12 form-group required atleastonecheckbox">
                    <label>Primary Focus <span>*</span>: <span class="err-msg">@Html.ValidationMessageFor(x => x.PrimaryFocus)</span></label>

                    <div class="row">
                        @for (int i = 0; i < Model.List_chckBox_PrimayFocus.Count; i++)
                        {
                            <div class="col-md-4 checkbox">
                                <label>
                                    @Html.CheckBoxFor(x => x.List_chckBox_PrimayFocus[i].IsSelected)
                                    @Html.LabelFor(x => x.List_chckBox_PrimayFocus[i].IsSelected, Model.List_chckBox_PrimayFocus[i].Text)
                                    @Html.HiddenFor(x => x.List_chckBox_PrimayFocus[i].Value)
                                    @Html.HiddenFor(x => x.List_chckBox_PrimayFocus[i].Text)
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label>Services Provided :</label>

                    <div class="row">
                        @for (int i = 0; i < Model.List_chckBox_ServicesProvided.Count; i++)
                        {
                            <div class="col-md-4 checkbox">
                                <label>
                                    @Html.CheckBoxFor(x => x.List_chckBox_ServicesProvided[i].IsSelected)
                                    @Html.LabelFor(x => x.List_chckBox_ServicesProvided[i].IsSelected, Model.List_chckBox_ServicesProvided[i].Text)
                                    @Html.HiddenFor(x => x.List_chckBox_ServicesProvided[i].Value)
                                    @Html.HiddenFor(x => x.List_chckBox_ServicesProvided[i].Text)
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-12 form-group required atleastonecheckbox">
                    <label>Type of care <span>*</span>: <span class="err-msg">@Html.ValidationMessageFor(x => x.TypeOfCare)</span></label>

                    <div class="row">
                        @for (int i = 0; i < Model.List_chckBox_TypeOfCare.Count; i++)
                        {
                            <div class="col-md-4 checkbox">
                                <label>
                                    @Html.CheckBoxFor(x => x.List_chckBox_TypeOfCare[i].IsSelected)
                                    @Html.LabelFor(x => x.List_chckBox_TypeOfCare[i].IsSelected, Model.List_chckBox_TypeOfCare[i].Text)
                                    @Html.HiddenFor(x => x.List_chckBox_TypeOfCare[i].Value)
                                    @Html.HiddenFor(x => x.List_chckBox_TypeOfCare[i].Text)
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label>Special Programs :</label>

                    <div class="row">
                        @for (int i = 0; i < Model.List_chckBox_Specialprograms.Count; i++)
                        {
                            <div class="col-md-4 checkbox">
                                <label>
                                    @Html.CheckBoxFor(x => x.List_chckBox_Specialprograms[i].IsSelected)
                                    @Html.LabelFor(x => x.List_chckBox_Specialprograms[i].IsSelected, Model.List_chckBox_Specialprograms[i].Text)
                                    @Html.HiddenFor(x => x.List_chckBox_Specialprograms[i].Value)
                                    @Html.HiddenFor(x => x.List_chckBox_Specialprograms[i].Text)
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-12 form-group atleastonecheckbox required">
                    <label>Forms Of Payment Accepted <span>*</span>: <span class="err-msg">@Html.ValidationMessageFor(x => x.FormsOfPaymentAccepted)</span></label>

                    <div class="row">
                        @for (int i = 0; i < Model.List_chckBox_FormsOfPaymentAccepted.Count; i++)
                        {
                            <div class="col-md-4 checkbox">
                                <label>
                                    @Html.CheckBoxFor(x => x.List_chckBox_FormsOfPaymentAccepted[i].IsSelected)
                                    @Html.LabelFor(x => x.List_chckBox_FormsOfPaymentAccepted[i].IsSelected, Model.List_chckBox_FormsOfPaymentAccepted[i].Text)
                                    @Html.HiddenFor(x => x.List_chckBox_FormsOfPaymentAccepted[i].Value)
                                    @Html.HiddenFor(x => x.List_chckBox_FormsOfPaymentAccepted[i].Text)
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label>Payment Assistance :</label>

                    <div class="row">
                        @for (int i = 0; i < Model.List_chckBox_PaymentAssistance.Count; i++)
                        {
                            <div class="col-md-4 checkbox">
                                <label>
                                    @Html.CheckBoxFor(x => x.List_chckBox_PaymentAssistance[i].IsSelected)
                                    @Html.LabelFor(x => x.List_chckBox_PaymentAssistance[i].IsSelected, Model.List_chckBox_PaymentAssistance[i].Text)
                                    @Html.HiddenFor(x => x.List_chckBox_PaymentAssistance[i].Value)
                                    @Html.HiddenFor(x => x.List_chckBox_PaymentAssistance[i].Text)
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-12 form-group">
                    <label>Special Language services :</label>

                    <div class="row">
                        @for (int i = 0; i < Model.List_chckBox_LanguageServices.Count; i++)
                        {
                            <div class="col-md-4 checkbox">
                                <label>
                                    @Html.CheckBoxFor(x => x.List_chckBox_LanguageServices[i].IsSelected)
                                    @Html.LabelFor(x => x.List_chckBox_LanguageServices[i].IsSelected, Model.List_chckBox_LanguageServices[i].Text)
                                    @Html.HiddenFor(x => x.List_chckBox_LanguageServices[i].Value)
                                    @Html.HiddenFor(x => x.List_chckBox_LanguageServices[i].Text)
                                </label>
                            </div>
                        }
                    </div>
                </div>
            </div>
            
            <div class="row aic">
                <div class="col-md-12 form-group maxthreecheckboxes">
                    <h5>Pick Max 3 Categories</h5>
                    <label>Which specialization(s) best describe your offering(s). Pick up to 3. All providers will be placed in the Drugs & Alcohol Treatment section of Sober.com. <span class="err-msg"></span></label>

                    <div class="row">
                        @for (int i = 0; i < Model.List_chckBox_AssociatedCategories.Count; i++)
                        {
                            <div class="col-md-4 checkbox">
                                <label>
                                    @if (Model.List_chckBox_AssociatedCategories[i].Text != "15")
                                    {
                                        if (Model.List_chckBox_AssociatedCategories[i].Text == "6")
                                        {
                                            Model.List_chckBox_AssociatedCategories[i].IsSelected = true;
                                            @Html.CheckBoxFor(x => x.List_chckBox_AssociatedCategories[i].IsSelected, new { disabled = "disabled" })
                                        }
                                        else
                                        {
                                            @Html.CheckBoxFor(x => x.List_chckBox_AssociatedCategories[i].IsSelected)
                                        }
                                        @Html.LabelFor(x => x.List_chckBox_AssociatedCategories[i].IsSelected, Model.List_chckBox_AssociatedCategories[i].Value)
                                        @Html.HiddenFor(x => x.List_chckBox_AssociatedCategories[i].Value)
                                        @Html.HiddenFor(x => x.List_chckBox_AssociatedCategories[i].Text)
                                    }
                                    
                                </label>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-12 form-group atleastonecheckbox required">
                    <label>Which category would you use to best describe your organization?<span>*</span></label>

                    <div class="row">
                        @foreach (var option in Model.List_rbBtn_CategoryList)
                        {
                            <div class="col-md-3 radio">
                                <label>
                                    @Html.RadioButtonFor(x => x.surveyCategory, option.Text)
                                    <label>@option.Text</label>
                                </label>
                            </div>
                        }
                    </div>
                    <span class="err-msg">@Html.ValidationMessageFor(model => model.surveyCategory)</span>
                    <br />
                    <br />
                </div>
            </div>
            
            <div class="row">
                <div class="col-md-2">
                    <button id="addTreatmentHouse" class="btn btn-primary" value="Submit">Submit</button>
                </div>                        
            </div>
        }
    </div>
</div>

<script type="text/javascript">
    function checkAtLeastOneCheckBox() {
        var message = "";
        var display = false;
        var errcount = 0;
        var setfocus = true;
        $(".atleastonecheckbox").each(function (i) {
            if ($(this).find(":checked").length == 0) {
                message = "Please select at least one " + $(this).find("label").first().text();
                var index = message.indexOf("*");
                if (index > 0) {
                    message = message.substr(0, index - 1);
                }

                $(this).find("span.err-msg").first().text(message);
                errcount++;
                if (setfocus) {
                    $(this).find("input").first().focus();
                    setfocus = false;
                }

            }
            else {
                $(this).find("span.err-msg").first().text("");
            }
        });
        if (errcount > 0) {
            return false;
        }
        else
            return true;
    }

    function checkMaxThreeCheckBoxes() {
        var message = "";
        var display = false;
        var errcount = 0;
        var setfocus = true;
        $(".maxthreecheckboxes").each(function (i) {
            if ($(this).find(":checked").length > 3) {
                message = $(this).find("label").first().text();
                var index = message.indexOf("*");
                if (index > 0) {
                    message = message.substr(0, index - 1);
                }

                $(this).find("span.err-msg").first().text(message);
                errcount++;
                if (setfocus) {
                    $(this).find("input").first().focus();
                    setfocus = false;
                }
            }
            else {
                $(this).find("span.err-msg").first().text("");
            }
        });
        if (errcount > 0) {
            return false;
        }
        else
            return true;
    }

    $(document).ready(function () {
        $("#addTreatmentHouse").click(function () {
            $('#DestinationWebsite').val($('#website').val());

            if (checkAtLeastOneCheckBox()) {
                if (checkMaxThreeCheckBoxes()) {
                    return true;
                }
                else {
                    return false;
                }
            }
            else {
                return false;
            }
        });

        $('#website').change(function () {
            var destination = $('#DestinationWebsite').val();

            if (destination == "") {
                $('#DestinationWebsite').val($(this).val());
                $('#DestinationWebsite').siblings('span').text('');
            }
        });

        $('#DestinationWebsite').change(function () {
            if ($(this).val() == "") {
                $(this).siblings('span').text('The DestinationWebsite field is required.');
            }
        });
    });
</script>     